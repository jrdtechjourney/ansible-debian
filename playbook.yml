- hosts: localhost
  vars_files:
    - config.yml
  tasks:

    # ============
    # apt packages
    # ============
    - name: Add repositories to sources list
      ansible.builtin.apt_repository:
        repo: "{{ item }}"
        state: present
      loop: "{{ apt.repositories }}"

    - name: Update packages 
      become: true
      package:
        update_cache: yes

    - name: Upgrade packages
      become: true
      package:
        upgrade: yes
      when: apt.upgrade is not defined or apt.upgrade

    - name: Install packages
      become: true
      package:
        name: "{{ apt.packages }}"
        state: latest
      when: apt.packages is defined

    # =======
    # Flatpak
    # =======
    - name: Install flatpak
      become: true
      ansible.builtin.apt:
        name: flatpak
        state: latest
      when: flatpak.install is not defined or flatpak.install

    - name: Add flathub remote
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
        method: user
      when: flatpak.install is not defined or flatpak.install

    - name: Install flatpak packages
      community.general.flatpak:
        name: "{{ flatpak.packages }}"
        state: present
        method: user
      when: flatpak.install is not defined or flatpak.install
        
    # ================
    # GNOME Extensions
    # ================
    - name: Install GNOME extensions
      become: true
      package:
        name:
          - gnome-shell-extension-bluetooth-quick-connect
          - gnome-shell-extension-dashtodock
          - gnome-shell-extension-hide-activities
          - gnome-shell-extension-weather
          - gnome-shell-extensions-extra

    - name: Enable GNOME extensions
      dconf:
        key: "/org/gnome/shell/enabled-extensions"
        value: "['user-theme@gnome-shell-extensions.gcampax.github.com', 'dash-to-dock@micxgx.gmail.com', 'Hide_Activities@shay.shayel.org', 'openweather-extension@jenslody.de', 'workspace-indicator@gnome-shell-extensions.gcampax.github.com', 'apps-menu@gnome-shell-extensions.gcampax.github.com', 'native-window-placement@gnome-shell-extensions.gcampax.github.com', 'no-overview@fthx']"
    
    - name: Configure Dash to Dock (no intellihide)
      dconf:
        key: "/org/gnome/shell/extensions/dash-to-dock/intellihide"
        value: "false"

    - name: Configure Dash to Dock (no hotkeys)
      dconf:
        key: "/org/gnome/shell/extensions/dash-to-dock/hot-keys"
        value: "false"
          
    # =========
    # Shortcuts
    # =========
    - name: Remove shortcuts to favourite applications
      dconf:
        key: "/org/gnome/shell/keybindings/switch-to-application-{{ item }}"
        value: ['']
      loop: [1, 2, 3, 4, 5, 6, 7, 8, 9]

    - name: Shortcuts to switch workspaces
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/switch-to-workspace-{{ item }}"
        value: ['<Super>{{ item }}']
      loop: [1, 2, 3, 4, 5, 6, 7, 8, 9]

    - name: Close windows
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/close"
        value: ['<Super>q']

    - name: Full screen
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/toggle-fullscreen"
        value: ['<Super>f']

    - name: Disable hide application
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/minimize"
        value: ['']

    - name: Lockscreen
      dconf:
        key: "/org/gnome/settings-daemon/plugins/media-keys/screensaver"
        value: ['<Super>o']

    - name: Tiling
      dconf:
        key: "/org/gnome/mutter/keybindings/toggle-tiled-right"
        value: ['<Super>Right', '<Super>l']

    - name: Tiling
      dconf:
        key: "/org/gnome/mutter/keybindings/toggle-tiled-left"
        value: ['<Super>Left','<Super>h']

    - name: Maximize
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/toggle-maximized"
        value: ['<Alt>F10','<Super>i']

    - name: Use Super+d for launching overview
      dconf:
        key: "/org/gnome/shell/keybindings/toggle-overview"
        value: ['<Super>d']

    - name: Switch to workspace left
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/switch-to-workspace-left" 
        value: ['<Super>Page_Up', '<Super><Alt>Left', '<Control><Alt>Left', '<Super>comma']

    - name: Switch to workspace right
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/switch-to-workspace-right" 
        value: ['<Super>Page_Down', '<Super><Alt>Right', '<Control><Alt>Right', '<Super>period']

    - name: Move window to workspace left
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/move-to-workspace-left"
        value: ['<Super><Shift>Page_Up', '<Super><Shift><Alt>Left', '<Control><Shift><Alt>Left', '<Super><Shift>comma']

    - name: Move window to workspace right
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/move-to-workspace-right"
        value: ['<Super><Shift>Page_Down', '<Super><Shift><Alt>Right', '<Control><Shift><Alt>Right', '<Super><Shift>period']

    # ====================
    # GNOME Configurations
    # ====================
    - name: Configure dark color scheme
      dconf:
        key: "/org/gnome/desktop/interface/color-scheme" 
        value: "'prefer-dark'"

    - name: Configure GNOME theme
      dconf:
        key: "/org/gnome/desktop/interface/gtk-theme"
        value: "'Adwaita-dark'"

    - name: Show battery percentage in topbar 
      dconf:
        key: "/org/gnome/desktop/interface/show-battery-percentage"
        value: "true"
    
    - name: Disable dynamic workspaces
      dconf:
        key: "/org/gnome/mutter/dynamic-workspaces"
        value: "false"

    - name: Set number of workspaces
      dconf:
        key: "/org/gnome/desktop/wm/preferences/num-workspaces"
        value: "false"

    - name: Configure touchpad
      dconf:
        key: "/org/gnome/desktop/peripherals/touchpad/click-method"
        value: "'areas'"

    - name: Configure Caps Lock as extra escape
      dconf:
        key: "/org/gnome/desktop/input-sources/xkb-options"
        value: ['caps:escape']

    - name: Disable event sounds
      dconf:
        key: "/org/gnome/desktop/sound/event-sounds"
        value: "false"

           
    # ===
    # ZSH
    # ===
    - name: Install zsh
      become: yes
      ansible.builtin.apt:
        name:
          - zsh
        state: present

    - name: Clone dotfiles
      ansible.builtin.git:
        repo: 'https://github.com/santisoler/dotfiles'
        dest: '~/.dotfiles'
        clone: yes
        update: yes

    - name: Stow zsh configs
      ansible.builtin.shell: |
        cd ~/.dotfiles
        stow zsh

    - name: Change shell to zsh
      become: yes
      ansible.builtin.user:
        name: "{{ ansible_env.USER }}"
        shell: /usr/bin/zsh


    # ======
    # Neovim
    # ======
    - name: Install Neovim dependencies and useful packages
      become: yes
      ansible.builtin.apt:
        name:
          - npm
          - python3.11-venv
          - libtree-sitter0
        state: present

    - name: Download Neovim appimage
      ansible.builtin.get_url:
        url: "https://github.com/neovim/neovim/releases/latest/download/nvim.appimage"
        dest: /tmp/nvim
        mode: '0755'
      register: download_result
      until: download_result is succeeded
      retries: 3
      delay: 5

    - name: Copy appimage to /usr/local/bin
      become: yes
      ansible.builtin.copy:
        src: "/tmp/nvim"
        dest: "/usr/local/bin/nvim"
        mode: preserve

    - name: Clone dotfiles
      ansible.builtin.git:
        repo: 'https://github.com/santisoler/dotfiles'
        dest: '~/.dotfiles'
        clone: yes
        update: yes

    - name: Stow Neovim configs
      ansible.builtin.shell: |
        cd ~/.dotfiles
        stow nvim

    - name: Install packages with packer
      ansible.builtin.shell: |
        nvim --headless -c 'autocmd User PackerComplete quitall' -c 'PackerSync'

    - name: Install lsp and linters with Mason
      ansible.builtin.shell: |
        nvim --headless -c 'MasonInstall {{ item }}' -c "quitall"
      loop:
        - pyright
        - black
        - flake8
        - mypy
        - ruff-lsp
        - prettier
        - rstcheck
        - stylelint
        # - cppcheck
        # - chktex 
        - proselint
        - shellcheck
        - markdownlint
        - rstcheck
        # - tidy
